@model EntityLayer.Concrete.Writer

@{
    ViewBag.Title = "WriterProfile";
    Layout = "~/Views/Shared/_WriterLayout.cshtml";
}

<h2>Profil Düzenleme</h2>

@using (Html.BeginForm("WriterProfile", "WriterPanel", FormMethod.Post))
{
    <div class="form-group">

        @*@Html.Label("Yazar ID")*@
        @Html.HiddenFor(x => x.writerId, new { @class = "form-control" })
        @Html.Label("Yazar Adı")
        @Html.TextBoxFor(x => x.writerName, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.writerName)
        <br />
        @Html.Label("Yazar Soyadı")
        @Html.TextBoxFor(x => x.writerSurName, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.writerSurName)
        <br />
        @Html.Label("Yazar Mail")
        @Html.TextBoxFor(x => x.writerMail, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.writerMail)
        <br />
        @Html.Label("Yazar Şifresi")
        @Html.TextBoxFor(x => x.writerPassword, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.writerPassword)
        <br />
        @Html.Label("Yazar Görsel Linki")
        @Html.TextBoxFor(x => x.writerImage, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.writerImage)
        <br />
        @Html.Label("Yazar Ünvan")
        @Html.TextBoxFor(x => x.writerTitle, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.writerTitle)
        <br />
        @Html.Label("Yazar Hakkında")
        @Html.TextAreaFor(x => x.writerAbout, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.writerAbout)
        <br />
        <button class="btn btn-success">Değişiklikleri Kaydet</button>
    </div>
}
